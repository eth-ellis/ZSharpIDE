<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Name="Page"
    x:Class="ZSharpIDE.Views.CodeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:io="using:System.IO"
    xmlns:models="using:ZSharpIDE.Models"
    xmlns:controls="using:ZSharpIDE.Controls"
    xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:viewModels="using:ZSharpIDE.ViewModels"
    x:DefaultBindMode="OneWay"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>

        <DataTemplate
            x:Key="ProjectTemplate"
            x:DataType="models:ProjectExplorerNode">

            <TreeViewItem
                ItemsSource="{x:Bind Children}"
                IsExpanded="True">

                <StackPanel
                    Orientation="Horizontal">

                    <TextBlock
                        Text="{x:Bind Content, Converter={StaticResource FileInfoNoExtension}}" />

                </StackPanel>

                <interactivity:Interaction.Behaviors>

                    <interactions:EventTriggerBehavior
                        EventName="DoubleTapped">
                        <interactions:InvokeCommandAction
                            Command="{Binding DataContext.OpenFileCommand, ElementName=Page}"
                            CommandParameter="{x:Bind Content}" />
                    </interactions:EventTriggerBehavior>

                </interactivity:Interaction.Behaviors>

                <TreeViewItem.ContextFlyout>
                    <MenuFlyout
                        Opening="MenuFlyout_Opening">

                        <MenuFlyoutItem
                            Text="New file"
                            Command="{Binding NewFileCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutItem
                            Text="New folder"
                            Command="{Binding NewDirectoryCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutSeparator />

                        <MenuFlyoutItem
                            Text="Reveal in file explorer"
                            Command="{Binding RevealInFileExplorerCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutSeparator />

                        <ToggleMenuFlyoutItem
                            Text="Show hidden files"
                            IsChecked="{Binding ShowHiddenFiles, Mode=TwoWay}"
                            Command="{Binding RefreshProjectExplorerCommand}" />

                    </MenuFlyout>
                </TreeViewItem.ContextFlyout>

            </TreeViewItem>

        </DataTemplate>
        
        <DataTemplate
            x:Key="DirectoryTemplate"
            x:DataType="models:ProjectExplorerNode">
            
            <TreeViewItem
                ItemsSource="{x:Bind Children}"
                IsExpanded="True">
                
                <StackPanel
                    Orientation="Horizontal">
                    
                    <TextBlock
                        Text="{x:Bind ((io:DirectoryInfo)Content).Name}" />

                </StackPanel>

                <TreeViewItem.ContextFlyout>
                    <MenuFlyout
                        Opening="MenuFlyout_Opening">

                        <MenuFlyoutItem
                            Text="New file"
                            Command="{Binding NewFileCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutItem
                            Text="New folder"
                            Command="{Binding NewDirectoryCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutSeparator />

                        <MenuFlyoutItem
                            Text="Reveal in file explorer"
                            Command="{Binding RevealInFileExplorerCommand}"
                            CommandParameter="{x:Bind Content}" />
                        
                        <MenuFlyoutSeparator />

                        <MenuFlyoutItem
                            Text="Rename"
                            Command="{Binding RenameDirectoryCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutItem
                            Text="Delete"
                            Command="{Binding DeleteDirectoryCommand}"
                            CommandParameter="{x:Bind Content}"/>

                    </MenuFlyout>
                </TreeViewItem.ContextFlyout>

            </TreeViewItem>
            
        </DataTemplate>

        <DataTemplate
            x:Key="FileTemplate"
            x:DataType="models:ProjectExplorerNode">

            <TreeViewItem
                ItemsSource="{x:Bind Children}"
                IsExpanded="True">

                <StackPanel
                    Orientation="Horizontal">

                    <TextBlock
                        Text="{x:Bind ((io:FileInfo)Content).Name}" />

                </StackPanel>

                <interactivity:Interaction.Behaviors>

                    <interactions:EventTriggerBehavior
                        EventName="DoubleTapped">
                        <interactions:InvokeCommandAction
                            Command="{Binding DataContext.OpenFileCommand, ElementName=Page}"
                            CommandParameter="{x:Bind Content}" />
                    </interactions:EventTriggerBehavior>

                </interactivity:Interaction.Behaviors>

                <TreeViewItem.ContextFlyout>
                    <MenuFlyout
                        Opening="MenuFlyout_Opening">

                        <MenuFlyoutItem
                            Text="Reveal in file explorer"
                            Command="{Binding RevealInFileExplorerCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutSeparator />

                        <MenuFlyoutItem
                            Text="Rename"
                            Command="{Binding RenameFileCommand}"
                            CommandParameter="{x:Bind Content}" />

                        <MenuFlyoutItem
                            Text="Delete"
                            Command="{Binding DeleteFileCommand}"
                            CommandParameter="{x:Bind Content}" />

                    </MenuFlyout>
                </TreeViewItem.ContextFlyout>

            </TreeViewItem>

        </DataTemplate>

        <viewModels:ProjectExplorerTemplateSelector
            x:Key="ProjectExplorerTemplateSelector"
            ProjectTemplate="{StaticResource ProjectTemplate}"
            DirectoryTemplate="{StaticResource DirectoryTemplate}"
            FileTemplate="{StaticResource FileTemplate}" />

    </Page.Resources>
    
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition
                Height="auto" />
            <RowDefinition
                Height="0.7*" />
            <RowDefinition
                Height="0.3*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="0.2*" />
            <ColumnDefinition
                Width="0.8*" />
        </Grid.ColumnDefinitions>

        <!-- Button Bar -->
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2">

            <Grid.RowDefinitions>
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="auto" />
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="auto" />
            </Grid.ColumnDefinitions>

            <StackPanel
                Grid.Row="0"
                Grid.Column="0"
                Orientation="Horizontal"
                Padding="10">

                <Button
                    Command="{x:Bind ViewModel.ReturnHomeCommand}"
                    ToolTipService.ToolTip="Return to home"
                    ToolTipService.Placement="Mouse">

                    <SymbolIcon
                        Symbol="Home" />

                </Button>

                <Button
                    Command="{x:Bind ViewModel.SaveCurrentFileCommand}"
                    ToolTipService.ToolTip="Save open file"
                    ToolTipService.Placement="Mouse"
                    Margin="10,0,0,0">

                    <SymbolIcon
                        Symbol="Save" />

                </Button>

                <ComboBox
                    SelectedIndex="{x:Bind ViewModel.SelectedConfigurationIndex, Mode=TwoWay}"
                    Margin="10,0,0,0"
                    Width="150">

                    <ComboBoxItem
                        Content="Debug" />

                    <ComboBoxItem
                        Content="Release" />

                </ComboBox>

                <Button
                    Visibility="{x:Bind ViewModel.ProgramRunning, Converter={StaticResource BoolToVisibility}, ConverterParameter=Invert}"
                    Command="{x:Bind ViewModel.RunProgramCommand}"
                    ToolTipService.ToolTip="Run your program"
                    ToolTipService.Placement="Mouse"
                    Margin="10,0,0,0">

                    <StackPanel
                        Orientation="Horizontal"
                        Spacing="10">

                        <SymbolIcon
                            Symbol="Play" />

                        <TextBlock
                            Text="Run" />

                    </StackPanel>

                </Button>

                <Button
                    Visibility="{x:Bind ViewModel.ProgramRunning, Converter={StaticResource BoolToVisibility}}"
                    Command="{x:Bind ViewModel.StopProgramCommand}"
                    ToolTipService.ToolTip="Stop running your program"
                    ToolTipService.Placement="Mouse"
                    Margin="10,0,0,0">

                    <StackPanel
                        Orientation="Horizontal"
                        Spacing="10">

                        <SymbolIcon
                            Symbol="Stop" />

                        <TextBlock
                            Text="Stop" />

                    </StackPanel>

                </Button>

            </StackPanel>

            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Orientation="Horizontal">

                <Button
                    Command="{x:Bind ViewModel.OpenGitConsoleCommand}"
                    ToolTipService.ToolTip="Open the Git console"
                    ToolTipService.Placement="Mouse"
                    Margin="0,0,10,0">

                    <StackPanel
                        Orientation="Horizontal"
                        Spacing="10">

                        <SymbolIcon
                            Symbol="NewWindow" />

                        <TextBlock
                            Text="Git Console" />

                    </StackPanel>

                </Button>

                <Button
                    Command="{x:Bind ViewModel.OpenSettingsCommand}"
                    ToolTipService.ToolTip="Open settings"
                    ToolTipService.Placement="Mouse"
                    Margin="0,0,10,0">

                    <StackPanel
                        Orientation="Horizontal"
                        Spacing="10">

                        <SymbolIcon
                            Symbol="Setting" />

                    </StackPanel>

                </Button>

            </StackPanel>

            <Line
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Stroke="MediumPurple"
                StrokeThickness="2"
                Stretch="Fill"
                X1="0"
                X2="1" />

        </Grid>

        <!-- Project Explorer -->
        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Grid.RowSpan="3">

            <Grid.RowDefinitions>
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="auto" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Row="0"
                Text="Project Explorer"
                Margin="10,10,0,0" />

            <TreeView
                Grid.Row="1"
                ItemsSource="{x:Bind ViewModel.ProjectExplorerNodes}"
                ItemTemplateSelector="{StaticResource ProjectExplorerTemplateSelector}"
                CanReorderItems="False"
                CanDragItems="False"
                Margin="0,10,0,0"/>

            <Line
                Grid.Column="1"
                Grid.RowSpan="2"
                Stroke="Gray"
                StrokeThickness="1"
                Stretch="Fill"
                Y1="0"
                Y2="1" />

        </Grid>

        <!-- File Tabs -->
        <TabView
            Grid.Row="1"
            Grid.Column="1"
            VerticalAlignment="Stretch"
            IsAddTabButtonVisible="False"
            TabItemsSource="{x:Bind ViewModel.OpenFiles}"
            SelectedItem="{x:Bind ViewModel.SelectedFileTab, Mode=TwoWay}">

            <TabView.TabItemTemplate>
                <DataTemplate
                    x:DataType="models:OpenFile">

                    <controls:CodeEditBox
                        PlainText="{x:Bind EditContent, Mode=TwoWay}" />

                </DataTemplate>
            </TabView.TabItemTemplate>

            <TabView.Resources>
                <Style
                    TargetType="TabViewItem">
                    <Setter
                        Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate
                                x:DataType="models:OpenFile">

                                <StackPanel
                                    Orientation="Horizontal">

                                    <TextBlock
                                        Text="{x:Bind FileInfo.Name}" />

                                    <TextBlock
                                        Visibility="{x:Bind ContentChanged, Converter={StaticResource BoolToVisibility}}"
                                        Text="*" />

                                </StackPanel>

                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabView.Resources>

            <interactivity:Interaction.Behaviors>

                <interactions:EventTriggerBehavior
                    EventName="TabCloseRequested">
                    <interactions:InvokeCommandAction
                        Command="{x:Bind ViewModel.CloseTabCommand}" />
                </interactions:EventTriggerBehavior>

            </interactivity:Interaction.Behaviors>

        </TabView>

        <!-- Bottom Tabs -->
        <TabView
            Grid.Row="2"
            Grid.Column="1"
            VerticalAlignment="Stretch"
            IsAddTabButtonVisible="False"
            SelectedIndex="{x:Bind ViewModel.SelectedBottomTabIndex, Mode=TwoWay}">
            
            <!-- Error List -->
            <TabView.TabItems>
                
                <TabViewItem
                    IsClosable="False">

                    <TabViewItem.Header>

                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*" />
                                <ColumnDefinition
                                    Width="auto" />
                                <ColumnDefinition
                                    Width="auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                Text="Error List" />

                            <InfoBadge
                                Grid.Column="1"
                                Value="{x:Bind ViewModel.WarningCount}"
                                Style="{StaticResource CautionValueInfoBadgeStyle}"
                                ToolTipService.ToolTip="Warnings"
                                ToolTipService.Placement="Mouse"
                                Margin="10,0,0,0" />

                            <InfoBadge
                                Grid.Column="2"
                                Value="{x:Bind ViewModel.ErrorCount}"
                                Style="{StaticResource CriticalValueInfoBadgeStyle}"
                                ToolTipService.ToolTip="Errors"
                                ToolTipService.Placement="Mouse"
                                Margin="5,0,0,0" />

                        </Grid>
                        
                    </TabViewItem.Header>

                    <toolkit:DataGrid
                        ItemsSource="{x:Bind ViewModel.ErrorLines}"
                        AutoGenerateColumns="True"
                        SelectionMode="Single"
                        IsReadOnly="True" />

                </TabViewItem>

                <!-- Build -->
                <TabViewItem
                    Header="Build"
                    IsClosable="False">

                    <ScrollViewer
                        Grid.Row="0">

                        <ItemsRepeater
                            ItemsSource="{x:Bind ViewModel.BuildLines}">

                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate
                                    x:DataType="x:String">

                                    <TextBlock
                                        Text="{x:Bind}"
                                        TextWrapping="NoWrap"
                                        Margin="10,5,10,5" />

                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>

                        </ItemsRepeater>

                    </ScrollViewer>

                </TabViewItem>
                
                <!-- Output -->
                <TabViewItem
                    Header="Output"
                    IsClosable="False">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="*" />
                            <RowDefinition
                                Height="auto" />
                        </Grid.RowDefinitions>

                        <ScrollViewer
                            Grid.Row="0">

                            <ItemsRepeater
                                ItemsSource="{x:Bind ViewModel.OutputLines}">

                                <ItemsRepeater.ItemTemplate>
                                    <DataTemplate
                                        x:DataType="x:String">

                                        <TextBlock
                                            Text="{x:Bind}"
                                            TextWrapping="NoWrap"
                                            Margin="10,5,10,5" />

                                    </DataTemplate>
                                </ItemsRepeater.ItemTemplate>

                            </ItemsRepeater>

                        </ScrollViewer>

                        <TextBox
                            Grid.Row="1"
                            Text="{x:Bind ViewModel.InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            KeyDown="InputBox_KeyDown"
                            Margin="10" />

                    </Grid>

                </TabViewItem>
                
            </TabView.TabItems>
            
        </TabView>

    </Grid>

</Page>
